<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MemberMapper">
	<resultMap type="com.badaservice.model.Member" id="member" >
		<result property="id" column="id" />
		<result property="user_id" column="user_id" />
		<result property="user_pw" column="user_pw" />
		<result property="name" column="name" />
		<result property="email" column="email" />
		<result property="birthdate" column="birthdate"/>
		<result property="tel" column="tel" />
		<result property="postcode" column="postcode" />
		<result property="addr1" column="addr1" />
		<result property="addr2" column="addr2" />
		<result property="profile_img" column="profil_image" />
		<result property="join_date" column="join_date" />
		<result property="join_edit" column="join_edit" />
		<result property="position" column="position" />
	</resultMap>
	
	<!-- SELECT -->
	<!-- 로그인 정보 -->
	<select id="selectLoginInfo" parameterType="com.badaservice.model.Member" resultMap="member">
		SELECT
			id, user_id, user_pw, name, email, birthdate, tel, postcode, addr1, addr2, profil_image, DATE_FORMAT(join_date, '%Y-%m-%d') AS join_date, DATE_FORMAT(join_edit, '%Y-%m-%d') AS join_edit, position
		FROM
			member
		WHERE
			user_id=#{user_id} AND user_pw=password(#{user_pw}) AND position='1' AND jo='0'
		ORDER BY
			id DESC
		LIMIT
			0, 1
	</select>
	<!-- 관리자 로그인 정보 -->
	<select id="selectAdminLoginInfo" parameterType="com.badaservice.model.Member" resultMap="member">
		SELECT
			id, user_id, user_pw, name, email, birthdate, tel, postcode, addr1, addr2, profile_img, DATE_FORMAT(join_date, '%Y-%m-%d') AS join_date, DATE_FORMAT(join_edit, '%Y-%m-%d') AS join_edit, position, jo
		FROM
			member
		WHERE
			user_id=#{user_id} AND user_pw=password(#{user_pw})AND position='0' AND jo='0'
		ORDER BY
			id DESC
		LIMIT
			0, 1
	</select>
	<!-- 아이디 중복 검사 -->
	<select id="selectUserIdCount" parameterType="com.badaservice.model.Member" resultType="int">
		SELECT
			COUNT(id)
		FROM
			member
		WHERE
			user_id=#{user_id}
	</select>
	<!-- 이메일 중복 검사 -->
	<select id="selectEmailCount" parameterType="com.badaservice.model.Member" resultType="int">
		SELECT
			COUNT(id)
		FROM
			member
		WHERE
			email=#{email}
	</select>
	<!-- 비밀번호 확인 -->
	<select id="selectUserPasswordCount" parameterType="com.badaservice.model.Member" resultType="int">
		SELECT
			COUNT(id)
		FROM
			member
		WHERE
			id=#{id} AND user_pw=password(#{user_pw})
	</select>
	<!-- 회원 목록 조회 -->
	<select id="selectMemberList" parameterType="com.badaservice.model.Member" resultMap="member">
		SELECT
			id, name, email, join_date, join_edit, jo
		FROM
			member
		ORDER BY
			id DESC
		LIMIT
			#{limitStart}, #{listCount}
	</select>
	<!-- 회원 상세 조회 -->
	<select id="selectMember" parameterType="com.badaservice.model.Member" resultMap="member">
		SELECT
			id, user_id, user_pw, name, email, birthdate, tel, postcode, addr1, addr2, profil_image, join_date, join_edit, position, jo
		FROM
			member
		WHERE
			id=#{id}
	</select>
	<!-- 총 회원 수 조회 -->
	<select id="selectMemberCount" parameterType="com.badaservice.model.Member" resultType="int">
		SELECT
			COUNT(id)
		FROM
			member
	</select>
	
	<!-- INSERT -->
	<!-- 회원가입 -->
	<insert id="insertMember" parameterType="com.badaservice.model.Member" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO
			member(
				user_id, user_pw, name, email, birthdate, tel, postcode, addr1, addr2, profil_image, join_date, join_edit, position, jo
			)
		VALUES(
			#{user_id}, password(#{user_pw}), #{name}, #{email},  #{birthdate},#{tel}, #{postcode}, #{addr1}, #{addr2}, #{profile_img}, now(), now(), '1', '0'
		)
	</insert>
	
	<!-- UPDATE -->
	<!-- 회원 정보 수정 -->
	<update id="updateMember" parameterType="com.badaservice.model.Member">
		UPDATE
			member
		SET
			name=#{name}, email=#{email}, tel=#{tel}, birthdate=#{birthdate}, postcode=#{postcode}, addr1=#{addr1}, addr2=#{addr2}, join_edit=now()
		WHERE
			id=#{id}
	</update>
	<!-- 비밀번호 수정 -->
	<update id="updateMemberPassword" parameterType="com.badaservice.model.Member">
		UPDATE
			member
		SET
			user_pw= password(#{new_user_pw})
		WHERE 
			id=#{id}
	</update>
	
	<!-- 회원탈퇴 -->
	<update id="updateMemberOut" parameterType="com.badaservice.model.Member">
		UPDATE
			member
		SET
			join_edit=now(), jo='1'
		WHERE
			id=#{id}
	</update>
	
	<!-- 비밀번호 재발급: 이메일 주소가 일치하는 비밀번호를 변경한다. -->
	<update id="updateMemberPasswordByEmail" parameterType="com.badaservice.model.Member">
	UPDATE
		member
	SET
		 user_pw=password(#{user_pw}), join_edit = now()
	WHERE
		email=#{email} and user_id=#{user_id}
	</update>
	
	<!-- 아이디 찾기 -->
	<select id="selectMemberId" parameterType="com.badaservice.model.Member" resultType="string">
	SELECT
		 replace(right("#{user_id}",3), "***")
	FROM
		 member
	WHERE
		email=#{email} 
	</select>
	
</mapper>