<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MessageMapper">
	<resultMap type="com.badaservice.model.messenger" id="messenger" >
		<result property="id" column="id" />
		<result property="content" column="content" />
		<result property="regDate" column="reg_date" />
		<result property="senderId" column="sender_id" />
		<result property="receiverId" column="reciver_id" />
		<result property="senderName" column="sender_name" />
		<result property="receiverName" column="receiver_name" />
		<result property="messageDelete" column="message_delete" />
		<result property="messageDeleteSend" column="message_delete_send" />
	</resultMap>
	
	<!-- 받은 쪽지함을 조회한다. -->
	<select id="selectMessageList" parameterType="com.badaservice.model.messenger" 
		resultMap="messenger">
		select id, content, reg_date, sender_id, receiver_id, sender_name, receiver_name, message_delete, message_delete_send
		from messenger
		where receiver_id=#{receiverId} AND message_delete=#{messageDelete}
		LIMIT #{limitStart}, #{listCount};
	</select>
	
	<!-- 보낸 쪽지함을 조회한다. -->
	<select id="selectMessageSendList" parameterType="com.badaservice.model.messenger" 
		resultMap="messenger">
		select id, content, reg_date, sender_id, receiver_id, receiver_name, sender_name, message_delete, message_delete_send
		from messenger
		where sender_id=#{senderId} AND message_delete_send=#{messageDeleteSend}
		LIMIT #{limitStart}, #{listCount};
	</select>
	
	<!-- 게시물 하나에 대한 정보를 조회한다. -->
	<select id="selectMessage" 
		parameterType="com.badaservice.model.messenger" 
		resultMap="messenger">
		SELECT id, content, reg_date, sender_id, receiver_id, sender_name, receiver_name, message_delete
		FROM   messenger
		WHERE  id=#{id} AND receiver_id=#{receiverId}
	</select>
	
	<!-- 게시물 하나에 대한 정보를 조회한다. -->
	<select id="selectSendMessage" 
		parameterType="com.badaservice.model.messenger" 
		resultMap="messenger">
		SELECT id, content, reg_date, sender_id, receiver_id, sender_name, receiver_name
		FROM   messenger
		WHERE  id=#{id} AND sender_id=#{senderId}
	</select>
	
	<!-- 쪽지쓰기  -->
	<insert id="insertMessage" parameterType="com.badaservice.model.messenger" 
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO messenger (content, reg_date, sender_id, receiver_id, sender_name, receiver_name, message_delete, message_delete_send) values (
		#{content}, now(), #{senderId}, #{receiverId}, #{senderName}, #{receiverName}, null, #{messageDeleteSend})
	</insert>
	
	<!-- 쪽지쓰기 -->
	<insert id="insertSendMessage" parameterType="com.badaservice.model.messenger" 
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO messenger (content, reg_date, sender_id, receiver_id, sender_name, receiver_name, message_delete, message_delete_send) values (
		#{content}, now(), #{senderId}, #{receiverId}, #{senderName}, #{receiverName}, #{messageDelete}, null)
	</insert>
	
	<!-- 받은 쪽지함 전체 게시물 수를 조회한다. -->
	<select id="selectMessageCount" parameterType="com.badaservice.model.messenger"
		resultType="int">
		SELECT COUNT(id) FROM messenger
		WHERE receiver_id=#{receiverId} and message_delete=#{messageDelete}
	</select>
	
	<!-- 보낸 쪽지함 전체 게시물 수를 조회한다. -->
	<select id="selectMessageSendCount" parameterType="com.badaservice.model.messenger"
		resultType="int">
		SELECT COUNT(id) FROM messenger
		WHERE sender_id=#{senderId} and message_delete_send=#{messageDeleteSend}
	</select>
	
	<!-- 보낸쪽지함 게시물 삭제 -->
	<update id="updateMessage" parameterType="com.badaservice.model.messenger">
		update messenger set message_delete_send=#{messageDeleteSend} where id=#{id}
	</update>
	
	<!-- 받은쪽지함 게시물 삭제 -->
	<update id="updateReceiverMessage" parameterType="com.badaservice.model.messenger">
		update messenger set message_delete=#{messageDelete} where id=#{id}
	</update>
	
	
</mapper>