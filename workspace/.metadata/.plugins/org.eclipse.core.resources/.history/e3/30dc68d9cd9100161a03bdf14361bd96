package study.jsp.mysite.controller.bbs;

import java.io.IOException;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.ibatis.session.SqlSession;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import study.jsp.helper.BaseController;
import study.jsp.helper.PageHelper;
import study.jsp.helper.UploadHelper;
import study.jsp.helper.WebHelper;
import study.jsp.mysite.dao.MyBatisConnectionFactory;
import study.jsp.mysite.impl.BbsDocumentServiceImpl;
import study.jsp.mysite.model.BbsDocument;
import study.jsp.mysite.service.BbsDocumentService;
@WebServlet("/bbs/document_list.do")
public class DocumentList extends BaseController {
	private static final long serialVersionUID = -7786870605257149925L;
	WebHelper web;
	BBSCommon bbs;
	Logger logger;
	SqlSession sqlSession;
	BbsDocumentService bbsDocumentService;
	PageHelper pageHelper;
	UploadHelper upload;
	@Override
	public String doRun(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		web = WebHelper.getInstance(request, response);
		bbs = BBSCommon.getInstance();
		logger = LogManager.getFormatterLogger(request.getRequestURI());
		sqlSession = MyBatisConnectionFactory.getSqlSession();
		bbsDocumentService = new BbsDocumentServiceImpl(sqlSession, logger);
		pageHelper = PageHelper.getInstance();
		/**게시판 카테고리 값을 받아서 View에 전달*/
		String category = web.getString("category");
		request.setAttribute("category", category);
		/**존재하는 게시판인지 판별하기*/
		try {
			String bbsName = bbs.getBbsName(category);
			request.setAttribute("bbsName", bbsName);
		} catch (Exception e) {
			sqlSession.close();
			web.redirect(null, e.getLocalizedMessage());
			return null;
		}
		/**조회할 정보에 대한 빈즈 생성*/
		String keyword = web.getString("keyword");
		
		BbsDocument document = new BbsDocument();
		document.setCategory(category);
		//현재 페이지 수 ->> 기본값은 1페이지로 설정함
		int page = web.getInt("page",1);
		
		//제목과 내용에 대한 검색으로 활용하기 위해서 입력값을 설정한다
		document.setSubject(keyword);
		document.setContent(keyword);
		/**게시물 목록 조회*/
		int totalCount = 0;
		List<BbsDocument> documentList = null;
		//게시판 종류가 갤러리인 경우 사진목록을 함께 조회함을 요청
		document.setGallery(category.equals("gallery"));
		
		try {
			//전체 게시물 수
			totalCount = bbsDocumentService.selectDocumentCount(document);
			//현제페이지 번호 계산하기
			//--->현제 페이지,전체 페이지 수, 한 페이지 목록 수, 그룹 갯수
			pageHelper.pageProcess(page, totalCount, 12, 5);
			//페이지 현제 번호 계산 결과에서 Limit절에 필요한 값을 빈즈에 추가
			document.setLimitStart(pageHelper.getLimitStart());
			document.setListCount(pageHelper.getListCount());
			
			documentList = bbsDocumentService.selelctDocumentList(document);
		} catch (Exception e) {
			web.redirect(null, e.getLocalizedMessage());
			e.printStackTrace();
			return null;
		}finally{
			sqlSession.close();
		}
		if (document.isGallery()&&documentList==null) {
			for (int i = 0; i < documentList.size(); i++) {
				BbsDocument item = documentList.get(i);
				String imagePath = item.getImagePath();
				if (imagePath != null) {
					String thumbPath = upload.createThumbnail(imagePath, 480, 320, true);
					
				}
			}
		}
		
		/**조회 결과를 뷰에 전달*/
		request.setAttribute("documentList", documentList);
		//사용자가 입력한 검색어를 뷰에 돌려준다
		request.setAttribute("keyword", keyword);
		//페이지 번호 계산 결과를 뷰에 전달
		request.setAttribute("pageHelper", pageHelper);
		
		return "bbs/document_list";
	
}
}
