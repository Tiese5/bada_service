package study.jsp.mysite.controller.bbs;

import java.io.IOException;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.ibatis.session.SqlSession;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import study.jsp.helper.BaseController;
import study.jsp.helper.UploadHelper;
import study.jsp.helper.WebHelper;
import study.jsp.mysite.dao.MyBatisConnectionFactory;
import study.jsp.mysite.impl.BbsDocumentServiceImpl;
import study.jsp.mysite.impl.BbsFileServiseImpl;
import study.jsp.mysite.model.BbsDocument;
import study.jsp.mysite.model.BbsFile;
import study.jsp.mysite.model.Member;
import study.jsp.mysite.service.BbsDocumentService;
import study.jsp.mysite.service.BbsFileService;
@WebServlet("/bbs/document_delete_ok.do")
public class DocumentDeleteOk extends BaseController {
	private static final long serialVersionUID = -8616321551110341778L;
	WebHelper web;
	BBSCommon bbs;
	Logger logger;
	SqlSession sqlSession;
	UploadHelper upload;
	BbsFileService bbsFileService;
	BbsDocumentService bbsDocumentService;
	@Override
	public String doRun(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		web = WebHelper.getInstance(request, response);
		bbs = BBSCommon.getInstance();
		logger = LogManager.getFormatterLogger(request.getRequestURI());
		sqlSession = MyBatisConnectionFactory.getSqlSession();
		upload = UploadHelper.getInstance();
		bbsDocumentService = new BbsDocumentServiceImpl(sqlSession, logger);
		bbsFileService = new BbsFileServiseImpl(sqlSession, logger);
		/**게시판 카테고리 값을 받아서 View에 전달*/
		String category = web.getString("category");
		request.setAttribute("category", category);
		/**존재하는 게시판인지 판별하기*/
		try {
			String bbsName = bbs.getBbsName(category);
			request.setAttribute("bbsName", bbsName);
		} catch (Exception e) {
			web.redirect(null, e.getLocalizedMessage());
			sqlSession.close();
			return null;
		}
		/**게시물 번호와 비밀번호 받기*/
		int documentId =web.getInt("document_id");
		String writerPw = web.getString("writer_pw");
		logger.debug("DocumentId="+documentId);
		logger.debug("writerPw="+writerPw);
		
		if (documentId ==0) {
			sqlSession.close();
			web.redirect(null, "글 번호가 없습니다");
			return null;
		}
		/**파리미터를 빈즈로 묶기*/
		BbsDocument document = new BbsDocument();
		document.setCategory(category);
		document.setId(documentId);
		document.setWriterPw(writerPw);
		
		BbsFile file = new BbsFile();
		file.setBbsDocumentId(documentId);
		/**게시물 번호를 Beans에 추가한다*/
		//로그인 중이라면 회원번호를 Beans에 추가한다
		Member loginInfo = (Member) web.getSession("loginInfo");
		if (loginInfo!=null) {
			document.setMemberId(loginInfo.getId());
		}
		List<BbsFile> fileList = null; //게시물에 속한 파일 목록에 대한 조회결과
		
		
		try {
			//Beans에 추가된 회원번호를 사용하셔 자신의 글임을 판변한다
			//--->자신의 글이 아니라면 비밀번호 검사
			if (bbsDocumentService.selectDocumentCountMemberId(document)<1) {
				bbsDocumentService.selectDocumentCountByPw(document);
			}
			fileList =bbsFileService.selectFileList(file);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;
	}

}
